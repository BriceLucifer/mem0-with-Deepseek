version: '3.8'

services:
  neo4j:
    image: neo4j:5-community
    container_name: neo4j_db
    ports:
      - "7474:7474" # HTTP
      - "7687:7687" # Bolt
    volumes:
      - neo4j_data:/data
    environment:
      # 这里会使用.env文件中定义的值
      - NEO4J_AUTH=${NEO4J_USERNAME:-neo4j}/${NEO4J_PASSWORD:-password}
      - NEO4J_PLUGINS=["apoc"]
    healthcheck:
      test: ["CMD-SHELL", "wget -q --spider http://localhost:7474 || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5

  chromadb:
    image: chromadb/chroma:latest
    container_name: chroma_db
    ports:
      - "8001:8000" # 将ChromaDB的8000端口映射到主机的8001
    volumes:
      - chroma_data:/chroma/.chroma/index

  memory_layer_api:
    build: .
    container_name: memory_layer_api
    ports:
      - "8080:8000" # <-- 将这里的 8080:8080 修改为 8080:8000
    env_file:
      - .env
    depends_on:
      neo4j:
        condition: service_healthy
      chromadb: 
        condition: service_started # ChromaDB没有healthcheck，等待启动即可
    environment:
      - NEO4J_URI=bolt://neo4j:7687
      - NEO4J_USERNAME=${NEO4J_USERNAME:-neo4j}
      - NEO4J_PASSWORD=${NEO4J_PASSWORD:-password}
      - NEO4J_DATABASE=neo4j
      # 如果ChromaDB也需要配置，请添加相应环境变量
      # - CHROMA_DB_HOST=chromadb
      # - CHROMA_DB_PORT=8000
      - RATE_LIMIT=200
      - ALLOWED_HOSTS=localhost,127.0.0.1
      - ALLOWED_ORIGINS=http://localhost:3000,http://127.0.0.1:3000
    command: ["gunicorn", "-w", "4", "-k", "uvicorn.workers.UvicornWorker", "-b", "0.0.0.0:8000", "main:app"]

volumes:
  neo4j_data:
  chroma_data: